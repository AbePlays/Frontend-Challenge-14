{"version":3,"sources":["reducers/darkMode.js","reducers/index.js","components/Header.js","actions/index.js","components/Card.js","components/Body.js","components/CardDetails.js","App.js","index.js"],"names":["darkModeReducer","state","allReducers","combineReducers","darkMode","Header","isDark","useSelector","dipatch","useDispatch","className","onClick","type","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","Card","imgUri","name","population","region","capital","src","alt","Body","useState","countries","setCountries","query","setQuery","showMenu","setShowMenu","getAllData","a","fetch","res","json","data","getRegionData","useEffect","onChange","e","target","value","placeholder","prev","map","country","length","includes","to","pathname","flag","numericCode","CardDetails","props","history","useHistory","location","getString","arr","array","forEach","item","push","join","replace","nativeName","subregion","topLevelDomain","currencies","languages","borders","App","path","exact","component","store","createStore","allReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef236383.chunk.js","sourcesContent":["const darkModeReducer = (state = true) => {\n  return !state;\n};\n\nexport default darkModeReducer;\n","import { combineReducers } from \"redux\";\nimport darkModeReducer from \"./darkMode\";\n\nconst allReducers = combineReducers({\n  darkMode: darkModeReducer,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggle } from \"../actions/index\";\n\nfunction Header() {\n  const isDark = useSelector((state) => state.darkMode);\n  const dipatch = useDispatch();\n\n  return (\n    <header\n      className={`flex justify-between py-6 sm:px-10 px-4 shadow items-center  ${\n        isDark ? \"bg-gray-800 text-white\" : \"bg-white text-gray-900\"\n      }`}\n    >\n      <h1 className=\"font-bold text-lg\">Where in the world?</h1>\n      <div\n        className=\"flex items-center cursor-pointer\"\n        onClick={() => dipatch(toggle())}\n      >\n        <svg\n          className=\"w-6\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1\"\n            d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n          />\n        </svg>\n        <p className=\"ml-2 font-light\">Dark Mode</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","export const toggle = () => {\n  return {\n    type: \"\",\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction Card({ imgUri, name, population, region, capital }) {\n  const isDark = useSelector((state) => state.darkMode);\n\n  return (\n    <div\n      className={`shadow rounded-md overflow-hidden ${\n        isDark ? \"bg-gray-800 text-white\" : \"bg-white text-gray-900\"\n      }`}\n    >\n      <div className=\"h-56\">\n        <img className=\"h-full w-full object-cover\" src={imgUri} alt=\"Flag\" />\n      </div>\n      <div className=\"px-6 py-6\">\n        <h1 className=\"font-bold text-lg\">{name}</h1>\n        <p className=\"mt-4 font-light text-sm\">\n          <span className=\"font-semibold \">Population: </span>\n          {population}\n        </p>\n        <p className=\" font-light  text-sm\">\n          <span className=\"font-semibold \">Region: </span>\n          {region}\n        </p>\n        <p className=\" font-light  text-sm mb-6\">\n          <span className=\"font-semibold \">Capital: </span>\n          {capital}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import { useSelector } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./Card\";\n\nfunction Body() {\n  const isDark = useSelector((state) => state.darkMode);\n  const [countries, setCountries] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [showMenu, setShowMenu] = useState(false);\n\n  const getAllData = async () => {\n    const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\n    const data = await res.json();\n    setCountries(data);\n  };\n\n  const getRegionData = async (region) => {\n    const res = await fetch(\n      `https://restcountries.eu/rest/v2/region/${region}`\n    );\n    const data = await res.json();\n    setCountries(data);\n    setShowMenu(false);\n  };\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"sm:flex justify-between sm:mx-8 mx-4 sm:mt-8 mt-4 text-sm\">\n        <div className={`h-12 ${isDark ? \"bg-gray-800\" : \"bg-white\"}`}>\n          <svg\n            className={`h-6 w-6 absolute mt-3 ml-6 ${\n              !isDark ? \"text-gray-800\" : \"text-white\"\n            }`}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n          </svg>\n          <input\n            onChange={(e) => setQuery(e.target.value)}\n            type=\"text\"\n            placeholder=\"Search for a country...\"\n            className={`shadow px-16 py-3 w-full rounded placeholder-current ${\n              isDark ? \"bg-gray-800 text-white\" : \"bg-white text-gray-900\"\n            }`}\n          />\n        </div>\n        <div\n          className={`relative flex items-center px-4 shadow rounded h-12 my-8 sm:mb-0 sm:mt-0 w-48 ${\n            isDark ? \"bg-gray-800 text-white\" : \"bg-white text-gray-900\"\n          }`}\n        >\n          <p className=\"font-light\">Filter by Region</p>\n          <svg\n            onClick={() => setShowMenu((prev) => !prev)}\n            className=\"h-4 ml-8 cursor-pointer\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M19 9l-7 7-7-7\"\n            />\n          </svg>\n          {showMenu && (\n            <div\n              className={`absolute left-0 top-0 mt-16 px-6 py-2 w-48 shadow-lg rounded text-sm ${\n                isDark\n                  ? \"bg-gray-800 text-white\"\n                  : \"bg-white text-gray-900 border\"\n              }`}\n            >\n              <p\n                onClick={() => getRegionData(\"africa\")}\n                className=\"my-2 cursor-pointer\"\n              >\n                Africa\n              </p>\n              <p\n                onClick={() => getRegionData(\"america\")}\n                className=\"my-2 cursor-pointer\"\n              >\n                America\n              </p>\n              <p\n                onClick={() => getRegionData(\"asia\")}\n                className=\"my-2 cursor-pointer\"\n              >\n                Asia\n              </p>\n              <p\n                onClick={() => getRegionData(\"europe\")}\n                className=\"my-2 cursor-pointer\"\n              >\n                Europe\n              </p>\n              <p\n                onClick={() => getRegionData(\"oceania\")}\n                className=\"my-2 cursor-pointer\"\n              >\n                Oceania\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"sm:mt-8 mt-4 sm:mx-8 mx-12 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-16\">\n        {countries.map((country) =>\n          query.length === 0 ? (\n            <Link\n              key={country.numericCode}\n              to={{\n                pathname: \"/details\",\n                state: {\n                  country: country,\n                },\n              }}\n            >\n              <Card\n                imgUri={country.flag}\n                capital={country.capital}\n                name={country.name}\n                population={country.population}\n                region={country.region}\n              />\n            </Link>\n          ) : (\n            country.name.includes(query) && (\n              <Link\n                key={country.numericCode}\n                to={{\n                  pathname: \"/details\",\n                  state: {\n                    country: country,\n                  },\n                }}\n              >\n                <Card\n                  imgUri={country.flag}\n                  capital={country.capital}\n                  name={country.name}\n                  population={country.population}\n                  region={country.region}\n                />\n              </Link>\n            )\n          )\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Body;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction CardDetails(props) {\n  const history = useHistory();\n  const country = props.location.state.country;\n  const isDark = useSelector((state) => state.darkMode);\n\n  const getString = (arr) => {\n    var array = [];\n    arr.forEach((item) => {\n      array.push(item.name);\n    });\n    return array.join(\", \");\n  };\n\n  return (\n    <div className=\"sm:px-10 px-4\">\n      <div\n        className={`flex items-center justify-center py-1 my-10 font-light w-32 rounded shadow  cursor-pointer ${\n          isDark ? \"bg-gray-800 text-white\" : \"bg-white border text-gray-900\"\n        }`}\n        onClick={() => history.replace(\"/\")}\n      >\n        <svg\n          className=\"h-8\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1\"\n            d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"\n          />\n        </svg>\n        <p className=\"ml-4\">Back</p>\n      </div>\n      <div className=\"grid sm:grid-cols-2 gap-x-8 lg:gap-x-32 gap-y-8 text-gray-800\">\n        <div className=\"h-full w-full\">\n          <img\n            className=\"h-full w-full object-cover\"\n            src={country.flag}\n            alt=\"flag\"\n          />\n        </div>\n        <div\n          className={`self-center ${isDark ? \"text-white\" : \"text-gray-900\"}`}\n        >\n          <h1 className=\"font-bold text-3xl\">{country.name}</h1>\n          <div className=\"grid md:grid-cols-2 gap-8 mt-8\">\n            <div>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Native Name: </span>\n                {country.nativeName}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Population: </span>\n                {country.population}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Region: </span>\n                {country.region}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Sub Region: </span>\n                {country.subregion}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Capital: </span>\n                {country.capital}\n              </p>\n            </div>\n            <div>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Top Level Domain: </span>\n                {country.topLevelDomain[0]}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Currencies: </span>\n                {getString(country.currencies)}\n              </p>\n              <p className=\"font-light my-1\">\n                <span className=\"font-semibold\">Languages: </span>\n                {getString(country.languages)}\n              </p>\n            </div>\n          </div>\n          <div className=\"my-8\">\n            <p className=\"inline font-semibold\">Border Countries:</p>\n            <div className=\"flex gap-2 flex-wrap mt-2\">\n              {country.borders.map((name) => {\n                return (\n                  <span\n                    className={`px-6 py-1 rounded shadow font-light text-sm ${\n                      isDark\n                        ? \"bg-gray-800 text-white\"\n                        : \"bg-white border text-gray-900\"\n                    }`}\n                  >\n                    {name}\n                  </span>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CardDetails;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport CardDetails from \"./components/CardDetails\";\n\nfunction App() {\n  const isDark = useSelector((state) => state.darkMode);\n\n  return (\n    <Router>\n      <div className={`min-h-screen ${isDark ? \"bg-gray-900\" : \"bg-white\"}`}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Body} />\n          <Route path=\"/details\" component={CardDetails} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducer from \"./reducers/index\";\nimport App from \"./App\";\nimport \"./assets/styles.css\";\n\nlet store = createStore(allReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}